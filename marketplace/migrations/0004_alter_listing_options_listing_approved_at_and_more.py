# Generated by Django 5.2.6 on 2025-09-30 06:07

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('marketplace', '0003_alter_listing_options_alter_listing_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='listing',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='listing',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_listings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listing',
            name='rejected_reason',
            field=models.CharField(blank=True, max_length=240),
        ),
        migrations.AlterField(
            model_name='listing',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('rejected', 'Rejected'), ('active', 'Active'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('archived', 'Archived')], db_index=True, default='pending', max_length=16),
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('negotiating', 'Negotiating'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('canceled', 'Canceled')], db_index=True, default='pending', max_length=16)),
                ('message', models.TextField(blank=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to='marketplace.listing')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_requests', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_request', to='marketplace.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('read_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_messages', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='marketplace.purchaserequest')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SellerRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.PositiveSmallIntegerField(default=5)),
                ('comment', models.TextField(blank=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_ratings', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ratings', to='marketplace.listing')),
                ('purchase_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ratings', to='marketplace.purchaserequest')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('buyer_request', 'Buyer Request'), ('seller_accept', 'Seller Accepted'), ('seller_reject', 'Seller Rejected'), ('seller_negotiate', 'Seller Negotiated'), ('mod_approve_listing', 'Moderator Approved Listing'), ('mod_reject_listing', 'Moderator Rejected Listing'), ('request_completed', 'Request Completed'), ('request_canceled', 'Request Canceled')], db_index=True, max_length=40)),
                ('note', models.TextField(blank=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_logs', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='marketplace.purchaserequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ListingPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='listings/%Y/%m/')),
                ('caption', models.CharField(blank=True, max_length=160)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='marketplace.listing')),
            ],
            options={
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['listing'], name='idx_listingphoto_listing')],
            },
        ),
        migrations.AddIndex(
            model_name='purchaserequest',
            index=models.Index(fields=['seller', 'status'], name='idx_pr_seller_status'),
        ),
        migrations.AddIndex(
            model_name='purchaserequest',
            index=models.Index(fields=['buyer', 'status'], name='idx_pr_buyer_status'),
        ),
        migrations.AddIndex(
            model_name='purchaserequest',
            index=models.Index(fields=['listing', 'status'], name='idx_pr_listing_status'),
        ),
        migrations.AddIndex(
            model_name='requestmessage',
            index=models.Index(fields=['request', 'created_at'], name='idx_reqmsg_request_created'),
        ),
        migrations.AddIndex(
            model_name='requestmessage',
            index=models.Index(fields=['author'], name='idx_reqmsg_author'),
        ),
        migrations.AddIndex(
            model_name='sellerrating',
            index=models.Index(fields=['seller'], name='idx_rating_seller'),
        ),
        migrations.AddIndex(
            model_name='sellerrating',
            index=models.Index(fields=['buyer'], name='idx_rating_buyer'),
        ),
        migrations.AddConstraint(
            model_name='sellerrating',
            constraint=models.CheckConstraint(check=models.Q(('score__gte', 1), ('score__lte', 5)), name='ck_rating_score_1_5'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['request', 'action'], name='idx_txlog_request_action'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['actor'], name='idx_txlog_actor'),
        ),
    ]
